# Generated by Django 5.1 on 2024-09-29 17:54

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='WaterPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_per_unit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('effective_date', models.DateField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=30, null=True)),
                ('last_name', models.CharField(blank=True, max_length=30, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pics/')),
                ('user_type', models.CharField(choices=[('tenant', 'Tenant'), ('landlord', 'Landlord'), ('admin', 'Admin')], max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('read', models.BooleanField(default=False)),
                ('notification_type', models.CharField(choices=[('Info', 'Info'), ('Warning', 'Warning'), ('Reminder', 'Reminder')], default='Info', max_length=10)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_notifications', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_notifications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image1', models.ImageField(blank=True, null=True, upload_to='property_images/')),
                ('image2', models.ImageField(blank=True, null=True, upload_to='property_images/')),
                ('image3', models.ImageField(blank=True, null=True, upload_to='property_images/')),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('block', models.CharField(blank=True, max_length=10, null=True)),
                ('house', models.CharField(blank=True, max_length=10, null=True)),
                ('description', models.TextField()),
                ('bathrooms', models.IntegerField(default=1)),
                ('bedrooms', models.IntegerField(default=1)),
                ('parking', models.IntegerField(default=1)),
                ('rent_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('available', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('landlord', models.ForeignKey(limit_choices_to={'user_type': 'landlord'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('water_price', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.waterprice')),
            ],
            options={
                'verbose_name': 'Property',
                'verbose_name_plural': 'Properties',
            },
        ),
        migrations.CreateModel(
            name='MaintenanceRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Plumbing', 'Plumbing'), ('Electrical', 'Electrical'), ('Structural', 'Structural'), ('Other', 'Other')], default='Other', max_length=50)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('In Progress', 'In Progress'), ('Completed', 'Completed'), ('Cancelled', 'Cancelled')], default='Pending', max_length=20)),
                ('severity', models.CharField(choices=[('Low', 'Low'), ('Medium', 'Medium'), ('High', 'High')], default='Medium', max_length=20)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('image1', models.ImageField(blank=True, null=True, upload_to='maintenance-requests/')),
                ('image2', models.ImageField(blank=True, null=True, upload_to='maintenance-requests/')),
                ('image3', models.ImageField(blank=True, null=True, upload_to='maintenance-requests/')),
                ('video', models.FileField(blank=True, null=True, upload_to='maintenance-requests/')),
                ('budget', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('tenant', models.ForeignKey(limit_choices_to={'user_type': 'tenant'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.property')),
            ],
        ),
        migrations.CreateModel(
            name='RentInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='invoices/')),
                ('monthly_rent', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('previous_water_reading', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('current_water_reading', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('water_consumption', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('water_bill', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('arrears', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('reading_date', models.DateField(blank=True, null=True)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('billing_period_start', models.DateField(auto_now_add=True)),
                ('billing_period_end', models.DateField(blank=True, null=True)),
                ('price_per_unit', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('paid', models.BooleanField(default=False)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Invoice',
                'verbose_name_plural': 'Invoices',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TenantProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('move_in_date', models.DateField(auto_now_add=True)),
                ('move_out_date', models.DateField(blank=True, null=True)),
                ('water_bill', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('arrears', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_monthly_bill', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_billed', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_paid', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('last_payment_date', models.DateField(blank=True, null=True)),
                ('rent_status', models.CharField(choices=[('paid', 'Paid'), ('partially_paid', 'Partially Paid'), ('overdue', 'Overdue')], default='overdue', max_length=20)),
                ('property', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tenants', to='base.property')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('amount', models.DecimalField(decimal_places=2, default=1, max_digits=10)),
                ('transaction_status', models.CharField(blank=True, max_length=100, null=True)),
                ('transaction_id', models.CharField(blank=True, max_length=100, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('invoice_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.rentinvoice')),
            ],
        ),
        migrations.CreateModel(
            name='VacateNotice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notice_date', models.DateField(auto_now_add=True)),
                ('vacate_date', models.DateField()),
                ('reason', models.TextField(blank=True, null=True)),
                ('reviewed', models.BooleanField(default=False)),
                ('tenant', models.ForeignKey(limit_choices_to={'user_type': 'tenant'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WaterMeterReading',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('previous_reading', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('current_reading', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('reading_date', models.DateField(auto_now_add=True)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.property')),
            ],
        ),
    ]
